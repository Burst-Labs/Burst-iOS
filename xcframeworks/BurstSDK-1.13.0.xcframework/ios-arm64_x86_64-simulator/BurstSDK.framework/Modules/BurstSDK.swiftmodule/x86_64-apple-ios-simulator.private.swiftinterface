// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
// swift-module-flags: -target x86_64-apple-ios14.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name BurstSDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFoundation
import Combine
import Foundation
import LinkPresentation
import OSLog
import Swift
import SwiftUI
import UIKit
import UserNotifications
import WebKit
import _AVKit_SwiftUI
import _Concurrency
import _StoreKit_SwiftUI
import _StringProcessing
import _SwiftConcurrencyShims
public protocol AnalyticsProtocol {
  func trackInstallSourceIfFirstLaunch()
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class BurstAppClipDelegate : ObjectiveC.NSObject, UIKit.UIApplicationDelegate, UserNotifications.UNUserNotificationCenterDelegate {
  @_Concurrency.MainActor(unsafe) @objc public func application(_ application: UIKit.UIApplication, didFinishLaunchingWithOptions launchOptions: [UIKit.UIApplication.LaunchOptionsKey : Any]?) -> Swift.Bool
  @_Concurrency.MainActor(unsafe) @objc public func application(_ application: UIKit.UIApplication, didRegisterForRemoteNotificationsWithDeviceToken dToken: Foundation.Data)
  @_Concurrency.MainActor(unsafe) @objc public func userNotificationCenter(_ center: UserNotifications.UNUserNotificationCenter, didReceive response: UserNotifications.UNNotificationResponse, withCompletionHandler completionHandler: @escaping () -> Swift.Void)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init()
  @objc deinit
}
public struct BurstTheme {
  public static let light: BurstSDK.BurstTheme
  public static let dark: BurstSDK.BurstTheme
  public static func custom(background: SwiftUI.Color, foreground: SwiftUI.Color) -> BurstSDK.BurstTheme
}
public enum BurstTarget {
  case iOSApp
  case iOSAppClip
  public static func == (a: BurstSDK.BurstTarget, b: BurstSDK.BurstTarget) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@_hasMissingDesignatedInitializers final public class Burst {
  public static func initialize(accessKey: Swift.String, appGroupIdentifier: Swift.String)
  public static let analytics: any BurstSDK.AnalyticsProtocol
  public static func getLatestInvocationUrl() -> Foundation.URL?
  public static func getLatestInvocationLinkData() -> [Swift.String : Swift.String]?
  public static func urlWasPreviouslyPresentedInApp(url: Foundation.URL) -> Swift.Bool
  public static func getLinkDataForUrl(url: Foundation.URL, completion: @escaping ([Swift.String : Swift.String]?) -> Swift.Void)
  public static func handleAppClipExperience(theme: BurstSDK.BurstTheme? = nil, loadingIcon: Swift.String? = nil) -> some SwiftUI.View
  
  public static func presentExperience(invocationUrl: SwiftUI.Binding<Foundation.URL>, theme: BurstSDK.BurstTheme? = nil, loadingIcon: Swift.String? = nil, onClose: @escaping () -> Swift.Void) -> some SwiftUI.View
  
  @objc deinit
}
extension BurstSDK.BurstTarget : Swift.Equatable {}
extension BurstSDK.BurstTarget : Swift.Hashable {}
